ggplot(aes(fct_reorder(state, pct_trump), value, fill = key))
election %>%
select(state, pct_trump, pct_clinton, pct_other, pct_johnson, winner) %>%
gather(key, value, -state, -winner) %>%
ggplot(aes(fct_reorder(state, pct_trump), value, fill = key))
election %>%
select(state, pct_trump, pct_clinton, pct_other, pct_johnson, winner) %>%
gather(key, value, -state, -winner) %>%
ggplot(aes(fct_reorder(state, value), value, fill = key))
election %>%
select(state, pct_trump, pct_clinton, pct_other, pct_johnson, winner) %>%
gather(key, value, -state, -winner) %>%
ggplot(aes(fct_reorder(state, value), value, fill = key)) +
geom_bar()
election %>%
select(state, pct_trump, pct_clinton, pct_other, pct_johnson, winner) %>%
gather(key, value, -state, -winner) %>%
ggplot(aes(fct_reorder(state, value), value, fill = key)) +
geom_col()
election %>%
select(state, pct_trump, pct_clinton, pct_other, pct_johnson, winner) %>%
gather(key, value, -state, -winner) %>%
ggplot(aes(fct_reorder(state, value), value, fill = key)) +
geom_col() +
scale_fill_calc()
election %>%
select(state, pct_trump, pct_clinton, pct_other, pct_johnson, winner) %>%
mutate(rank = pct_trump) %>%
gather(key, value, -state, -winner, rank) %>%
ggplot(aes(fct_reorder(state, rank), value, fill = key)) +
geom_col() +
scale_fill_calc()
election %>%
select(state, pct_trump, pct_clinton, pct_other, pct_johnson, winner) %>%
mutate(rank = pct_trump) %>%
gather(key, value, -state, -winner, -rank) %>%
ggplot(aes(fct_reorder(state, rank), value, fill = key)) +
geom_col() +
scale_fill_calc()
election %>%
select(state, pct_trump, pct_clinton, pct_other, pct_johnson, winner) %>%
mutate(rank = pct_trump) %>%
gather(key, value, -state, -winner, -rank) %>%
ggplot(aes(fct_reorder(state, rank), value, fill = key)) +
geom_col() +
scale_fill_calc() +
coord_flip()
ggplot(aes(fct_reorder(state, rank), value, fill = fct_relevel(key, "pct_clinton", "pct_trump", "pct_other","pct_johnson")) +
election %>%
select(state, pct_trump, pct_clinton, pct_other, pct_johnson, winner) %>%
mutate(rank = pct_trump) %>%
gather(key, value, -state, -winner, -rank) %>%
ggplot(aes(fct_reorder(state, rank), value, fill = fct_relevel(key, "pct_clinton", "pct_trump", "pct_other","pct_johnson"))) +
geom_col() +
scale_fill_calc() +
coord_flip()
election %>%
select(state, pct_trump, pct_clinton, pct_other, pct_johnson, winner) %>%
mutate(rank = pct_trump) %>%
gather(key, value, -state, -winner, -rank) %>%
ggplot(aes(fct_reorder(state, rank), value, fill = fct_relevel(key, "pct_clinton", "pct_trump", "pct_other","pct_johnson"))) +
geom_col() +
scale_fill_calc(name = "Candidate") +
coord_flip()
election %>%
select(state, pct_trump, pct_clinton, pct_other, pct_johnson, winner) %>%
mutate(rank = pct_trump) %>%
gather(key, value, -state, -winner, -rank) %>%
ggplot(aes(fct_reorder(state, rank), value, fill = fct_relevel(key, "pct_clinton", "pct_trump", "pct_other","pct_johnson"))) +
geom_col() +
scale_fill_calc(name = "Candidate", labels = c("Clinton","Trump","Other","Green")) +
coord_flip()
election %>%
select(state, pct_trump, pct_clinton, pct_other, pct_johnson, winner) %>%
mutate(rank = pct_trump) %>%
gather(key, value, -state, -winner, -rank) %>%
ggplot(aes(fct_reorder(state, rank), value, fill = fct_relevel(key, "pct_clinton", "pct_trump", "pct_other","pct_johnson"))) +
geom_col() +
scale_fill_calc(name = "Candidate", labels = c("Clinton","Trump","Other","Johnson")) +
coord_flip()
elections_historic
election
socviz::lawschools
socviz::studebt
data("rivers")
rivezrs
rivers
data("storms")
storms
storms %>%
ggplot(aes(statys, wind))
storms %>%
ggplot(aes(status, wind)) +
geom_boxplot()
data("gss_cat")
gss_cat
gapminder::gapminder
data("volcano")
volcano
data("sleep")
sleep
glimpse(sleep)
msleep
dplyr::nasa
msleep %>%
ggplot(aes(order, bodywt))
msleep %>%
ggplot(aes(order, bodywt)) +
geom_boxplot()
msleep %>%
ggplot(aes(vore, bodywt)) +
geom_boxplot()
msleep %>%
ggplot(aes(order, bodywt)) +
geom_boxplot()
msleep
msleep %>%
ggplot(aes(order, sleep_rem)) +
geom_boxplot()
msleep %>%
ggplot(aes(order, sleep_total)) +
geom_boxplot()
msleep %>%
ggplot(aes(order, sleep_total)) +
geom_boxplot() +
theme_minimal()
ggplot(aes(fct_reorder(order, ssleep_total, sleep_total)) +
ggplot(aes(fct_reorder(order, sleep_total, sleep_total)) +
theme_minimal()
theme_minimal()
msleep %>%
ggplot(aes(fct_reorder(order, sleep_total, sleep_total))) +
geom_boxplot() +
theme_minimal()
msleep %>%
ggplot(aes(fct_reorder(order, sleep_total), sleep_total)) +
geom_boxplot() +
theme_minimal()
msleep %>%
ggplot(aes(fct_reorder(order, sleep_total, max), sleep_total)) +
geom_boxplot() +
theme_minimal()
msleep %>%
ggplot(aes(fct_reorder(order, sleep_total, min), sleep_total)) +
geom_boxplot() +
theme_minimal()
msleep %>%
ggplot(aes(fct_reorder(order, sleep_total, mean), sleep_total)) +
geom_boxplot() +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE, warning = F, cache = T)
library(tufte)
library(pander)
source("prepare_session.R")
knitr::opts_chunk$set(out.width = "100%",
fig.width = 6, fig.asp = 0.6, tidy='styler',
cache = T,
echo = T,
warning = F)
library(dplyr)
library(forcats)
library(dplyr)
library(tidyr)
library(stringr)
library(gapminder)
set.seed(123)
countries_population <- gapminder %>% filter(year == 2007) %>% select(country, pop) %>% sample_frac(0.8)
countries_lifeExp <- gapminder %>% filter(year == 2007) %>% select(country, lifeExp) %>% sample_frac(0.6)
population_europe <- gapminder %>% filter(continent == "Europe", year == 2007) %>% select(country, pop)
population_africa<- gapminder %>% filter(continent == "Africa", year == 2007) %>% select(country, pop)
countries_population
countries_lifeExp
population_africa
population_europe
inner_join(countries_population, countries_lifeExp)
left_join(countries_population, countries_lifeExp)
left_join(countries_population, countries_lifeExp) %>%
summary()
right_join(countries_population, countries_lifeExp)
full_join(countries_population, countries_lifeExp)
knitr::include_graphics("images/join_types.PNG", dpi = NA)
knitr::include_graphics("images/join_duplicates.PNG", dpi = NA)
library(nycflights13)
flights %>%
glimpse
airlines %>%
glimpse
flights %>%
inner_join(airlines)
weather %>%
glimpse
flights %>%
inner_join(airlines) %>%
inner_join(weather) -> flights
flights %>%
glimpse
population_africa
population_europe
bind_rows(population_africa, population_europe)
information_africa <- gapminder %>% filter(continent == "Africa", year == 2007) %>% select(country, pop, lifeExp)
information_africa
bind_rows(information_africa, population_europe) %>%
summary
knitr::include_graphics("images/tidydata.png", dpi = NA)
knitr::include_graphics("images/tidyverse.JPG", dpi = NA)
knitr::include_graphics("images/operations2.png", dpi = NA)
set.seed(123)
students <- tibble(first_name = babynames::babynames %>% sample_n(10) %>% pull(name),
last_name = babynames::babynames %>% sample_n(10) %>% pull(name))
students
students %>%
unite(col = name, first_name, last_name)
students %>%
unite(col = name, first_name, last_name, sep = " ")
students %>%
unite(col = name, first_name, last_name, sep  =" ", remove = F)
set.seed(456)
tibble(first_name = babynames::babynames %>% sample_n(10) %>% pull(name),
last_name = babynames::babynames %>% sample_n(10) %>% pull(name)) %>%
unite(col = name, first_name, last_name, sep = " ") -> students_2
students_2
students_2 %>%
separate(col = name, into = c("first_name","last_name"))
knitr::include_graphics("images/spread.PNG", dpi = NA)
library(ggplot2)
diamonds %>%
count(color, clarity)
diamonds %>%
count(color, clarity) %>%
spread(clarity, n)
knitr::include_graphics("images/gather.PNG", dpi = NA)
gapminder %>%
select(country, year, pop, continent) %>%
spread(year, pop) -> yearly_population
yearly_population
yearly_population %>%
gather(key = time, value = population, -country, -continent)
yearly_population %>%
gather(key = time, value = population, -country, -continent) %>%
mutate(time = as.numeric(time)) %>%
ggplot(aes(time, population/(10^9), group = country, color = continent)) +
geom_line() +
facet_grid(.~continent) +
theme_light() +
labs(y = "Population (in billion)") +
theme(legend.position = "top")
data(who)
who %>%
glimpse()
who %>%
count(country, year)
who %>%
count(country, year) %>%
filter(n > 1)
who %>% count(year) %>% nrow
who %>% count(country) %>% nrow()
219*34
who %>%
gather(key = type, value = cases, -country:-year)
who %>%
gather(key = type, value = cases, -country:-year) %>%
select(-iso2, -iso3)
who %>%
gather(key = type, value = cases, -country:-year) %>%
select(-iso2, -iso3) %>%
count(type) %>%
print(n = Inf) # I want to see all of them
who %>%
gather(key = type, value = cases, -country:-year) %>%
select(-iso2, -iso3) %>%
mutate(type = str_replace(type, "newrel", "new_rel")) %>%
count(type) %>%
print(n = Inf)
who %>%
gather(key = type, value = cases, -country:-year) %>%
select(-iso2, -iso3) %>%
mutate(type = str_replace(type, "newrel", "new_rel")) %>%
separate(type, into = c("is_new", "diagnosis", "age_gender"))
who %>%
gather(key = type, value = cases, -country:-year) %>%
select(-iso2, -iso3) %>%
mutate(type = str_replace(type, "newrel", "new_rel")) %>%
separate(type, into = c("is_new", "diagnosis", "age_gender")) %>%
separate(gender_age, into = c("gender","age"), sep = 1)
who %>%
gather(key = type, value = cases, -country:-year) %>%
select(-iso2, -iso3) %>%
mutate(type = str_replace(type, "newrel", "new_rel")) %>%
separate(type, into = c("is_new", "diagnosis", "gender_age"))
who %>%
gather(key = type, value = cases, -country:-year) %>%
select(-iso2, -iso3) %>%
mutate(type = str_replace(type, "newrel", "new_rel")) %>%
separate(type, into = c("is_new", "diagnosis", "gender_age")) %>%
separate(gender_age, into = c("gender","age"), sep = 1)
who %>%
gather(key = type, value = cases, -country:-year) %>%
select(-iso2, -iso3) %>%
mutate(type = str_replace(type, "newrel", "new_rel")) %>%
separate(type, into = c("is_new", "diagnosis", "age_gender")) %>%
separate(gender_age, into = c("gender","age"), sep = 1) -> tidy_who
who %>%
gather(key = type, value = cases, -country:-year) %>%
select(-iso2, -iso3) %>%
mutate(type = str_replace(type, "newrel", "new_rel")) %>%
separate(type, into = c("is_new", "diagnosis", "gender_age")) %>%
separate(gender_age, into = c("gender","age"), sep = 1) -> tidy_who
tidy_who %>%
filter(gender == "f", !(age %in% c("014","1524")), country == "Belgium", year == 2000) %>%
group_by(diagnosis) %>%
summarize(n_cases = sum(cases, na.rm = T))
tidy_who %>%
filter(country == "Belgium") %>%
group_by(year) %>%
summarize(n_cases = sum(cases, na.rm = T))
0.0000322
data
data %>% mutate(datum = as.character(datum))
x <- ymd(20201304)
x <- ymd(20200413)
x
class(x)
x <- ymd("20200413 19u09")
x <- ymd_hm("20200413 19u09")
class(x)
x
x <- ymd_hm("20200413 19u09")
x
class(x)
data
make_datetime(year = 1999, month = 12, day = 22, sec = 10)
make_date(year = 1999, month = 12, day = 22)
today <- today()
today
now <- now()
now
floor_date(now, "month")
floor_date(now, "hour")
ceiling_date(now, "hour")
ceiling_date(now, "month")
now
year(now)
month(now)
month(now, label = F)
now
year(now)
month(now)
month(now, label = T)
day(now)
hour(now)
minute(now)
seconds(now)
second(now)
now
year(now)
month(now)
month(now, label = T)
hour(now)
day(now)
minute(now)
second(now)
wday(now)
wday(now, label = T)
days_in_month(now)
weekdays(now)
yday(now)
wday(now)
wday(now, label = T)
yday(now)
mday(now)
round_date(now, hour)
round_date(now, "hour")
x <- ymd_hms("2020-04-13 19:09:21", tz = "Europe/Brussels")
x
y <- ymd_hms("2020-04-13 19:09:21", tz = "America/NewYork")
y <- ymd_hms("2020-04-13 19:09:21", tz = "America/New York")
olson_time_zones()
x <- ymd_hms("2020-04-13 19:09:21", tz = "Europe/Brussels")
x
y <- ymd_hms("2020-04-13 19:09:21", tz = "America/New_York")
y
with_tz(x, "America/New_York")
x <- ymd(20190101)
x
x + year(1)
x
x + years(1)
x + dyears(1)
y <- x + dyears(1)
y
y + years(1)
y + dyears(1)
x <- ymd_hm("2020 03 27 1200")
x
x + days(1)
x + ddays(1)
x + ddays(1) -> y
y
y + days(1)
y + ddays(1)
x <- ymd_hm("2020 03 27 1200", tz = "Europe/Brussels")
x
x + ddays(1)
x
x + days(1)
y + ddays(1)
x
x + days(1)
x + ddays(1)
x + ddays(1) -> yt
x + ddays(1) -> y
y
y + days(1)
y + ddays(1)
zomer <- interval(ymd(20200621), ymd(20200920))
zomer
zomer <- ymd(20200621) %--% ymd(20200920)
zomer
class(zomer)
doomsday >= now()
## [1] FALSE
now() - doomsday
## Time difference of 445.9866 days
doomsday + period(1,"week")
## [1] "2017-01-27 11:30:00 CET"
leap_year(2012)
## [1] TRUE
leap_year(now())
## [1] FALSE
now() + weeks(0:2)
## [1] "2020-04-11 12:10:43 CEST"
## [2] "201-04-18 12:10:43 CEST"
## [3] "2018-04-25 12:10:43 CEST"
now()
doomsday <- ymd_hms("2017-01-20 11:30:00", tz = "EST")
doomsday
now() - doomsday
doomsday + period(1,"week")
damnation <- interval(doomsday,now())
damnation
now() %within% zomer
(now() + month(3)) %within% zomer
(now() + month(4)) %within% zomer
now() + months(4)
now() %within% zomer
now() + months(3)
(now() + months(3)) %within% zomer
second(now)
now
second(now())
now()
second(.Last.value)
data
data %>% mutate(dag = floor_date(datum, "day"))
data %>% mutate(dag = floor_date(datum, "day"))
data %>% mutate(dag = floor_date(datum, "day")) %>% group_by(dag) %>% summarize(n = n())
data %>% mutate(dag = floor_date(datum, "day")) %>% group_by(dag) %>% summarize(n = n()) %>% ggplot(aes(dag, n)) + geom_line()
data %>% mutate(weekdag = wday(datum, label = T)) %>% group_by(weekdag) %>% summarize(n = n()) %>% ggplot(aes(weekdag, n)) + geom_col()
data %>% mutate(weekdag = wday(datum, label = T), maand = month(datum, label = T)) %>% group_by(weekdag, maand) %>% summarize(n = n()) %>% ggplot(aes(weekdag, n)) + geom_col() + facet_wrap(~maand)
data %>% mutate(weekdag = wday(datum, label = T), maand = month(datum, label = T)) %>% group_by(weekdag, maand) %>% summarize(n = n()) %>% ggplot(aes(weekdag, n)) + geom_line(aes(group = maand))
data %>% mutate(weekdag = wday(datum, label = T), maand = month(datum, label = T)) %>% group_by(weekdag, maand) %>% summarize(n = n()) %>% ggplot(aes(weekdag, n)) + geom_line(aes(group = maand, color = maand))
data %>% mutate(weekdag = wday(datum, label = T), maand = month(datum, label = T)) %>% group_by(weekdag, maand) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = mean(n), ratio = n/weekdag_gemiddeld) %>% ggplot(aes(weekdag, ratio)) + geom_line(aes(group = maand, color = maand))
data %>% mutate(weekdag = wday(datum, label = T), maand = month(datum, label = T)) %>% group_by(weekdag, maand) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = mean(n), ratio = n/weekdag_gemiddeld) %>% ggplot(aes(weekdag, ratio)) + geom_col() + facet_wrap(~maand)
data %>% mutate(weekdag = wday(datum, label = T), maand = month(datum, label = T)) %>% group_by(weekdag, maand) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = mean(n), ratio = 1- n/weekdag_gemiddeld) %>% ggplot(aes(weekdag, ratio)) + geom_col() + facet_wrap(~maand)
data %>% mutate(weekdag = wday(datum, label = T), maand = month(datum, label = T)) %>% group_by(weekdag, maand) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = mean(n), ratio = n/weekdag_gemiddeld-1) %>% ggplot(aes(weekdag, ratio)) + geom_col() + facet_wrap(~maand)
data
summary(data)
data %>% mutate(day = day(datum), month = month(datum)) %>% group_by(day, month) %>% summarize(n = n()) %>% ggplot(aes(day, n)) + facet_wrap(~month)
data %>% mutate(day = day(datum), month = month(datum)) %>% group_by(day, month) %>% summarize(n = n()) %>% ggplot(aes(day, n)) + geom_line() facet_wrap(~month)
data %>% mutate(day = day(datum), month = month(datum)) %>% group_by(day, month) %>% summarize(n = n()) %>% ggplot(aes(day, n)) + geom_line() + facet_wrap(~month)
data %>% mutate(weekdag = wday(datum, label = T), maand = month(datum, label = T)) %>% group_by(weekdag, maand) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = mean(n))
data %>% mutate(maand = month(datum, label = T), dag = floor_date(datum, "day")) %>% group_by(maand, dag) %>% summarize(n = n()) %>% mutate(maand_gemiddeld = mean(n))
data %>% mutate(weekdag = wday(datum, label = T), maand = month(datum, label = T)) %>% group_by(weekdag, maand) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = mean(n))
data %>% mutate(weekdag = wday(datum, label = T), dag = floor_date(datum, "day")) %>% group_by(weekdag, maand) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = mean(n))
data %>% mutate(weekdag = wday(datum, label = T), dag = floor_date(datum, "day")) %>% group_by(weekdag, dah) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = mean(n))
data %>% mutate(weekdag = wday(datum, label = T), dag = floor_date(datum, "day")) %>% group_by(weekdag, dag) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = mean(n))
data %>% mutate(weekdag = wday(datum, label = T), dag = floor_date(datum, "day")) %>% group_by(weekdag, dag) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = mean(n)) %>% ggplot(aes(dag, weekdag_gemiddeld)) + geom_line()
data %>% mutate(weekdag = wday(datum, label = T), dag = floor_date(datum, "day")) %>% group_by(weekdag, dag) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = mean(n)) %>% ggplot(aes(dag, n-weekdag_gemiddeld)) + geom_line()
data %>% mutate(dag = floor_date(datum, "day")) %>% group_by(dag) %>% summarize(n = n()) %>% ggplot(aes(dag, n)) + geom_line()
data %>% mutate(dag = floor_date(datum, "day")) %>% group_by(dag) %>% summarize(n = n()) %>% ggplot(aes(dag, n)) + geom_line() + geom_smooth()
data %>% mutate(dag = floor_date(datum, "day")) %>% 	group_by(dag) %>% 	summarize(n = n()) %>%
mutate(weekdag = wday(dag)) %>%
group_by(weekdag) %>%	mutate(weekdag_gemiddeld = mean(n)) %>% 	ggplot(aes(dag, weekdag_gemiddeld)) + geom_line()
data %>% mutate(dag = floor_date(datum, "day")) %>% 	group_by(dag) %>% 	summarize(n = n()) %>%
mutate(weekdag = wday(dag)) %>%
group_by(weekdag) %>%	mutate(weekdag_gemiddeld = mean(n)) %>% 	ggplot(aes(dag, weekdag_gemiddeld)) + geom_line()
data %>% mutate(dag = floor_date(datum, "day")) %>% 	group_by(dag) %>% 	summarize(n = n()) %>%
mutate(weekdag = wday(dag)) %>%
group_by(weekdag) %>%	mutate(weekdag_gemiddeld = mean(n)) %>% 	ggplot(aes(dag, weekdag_gemiddeld)) + geom_line()
data %>% mutate(dag = floor_date(datum, "day")) %>% 	group_by(dag) %>% 	summarize(n = n()) %>%
mutate(weekdag = wday(dag)) %>%
group_by(weekdag) %>%	mutate(weekdag_gemiddeld = mean(n)) %>% ggplot(aes(dag, weekdag_gemiddeld)) + geom_line()
data %>% mutate(dag = floor_date(datum, "day")) %>% 	group_by(dag) %>% 	summarize(n = n()) %>%
mutate(weekdag = wday(dag)) %>%
group_by(weekdag) %>%	mutate(weekdag_gemiddeld = median(n)) %>% ggplot(aes(dag, weekdag_gemiddeld)) + geom_line()
data %>% mutate(dag = floor_date(datum, "day")) %>% 	group_by(dag) %>% 	summarize(n = n()) %>%
mutate(weekdag = wday(dag)) %>%
group_by(weekdag) %>%	mutate(weekdag_gemiddeld = mean(n)) %>% ggplot(aes(dag, weekdag_gemiddeld)) + geom_line()
data %>% mutate(weekdag = wday(datum, label = T), dag = floor_date(datum, "day")) %>% group_by(weekdag, dag) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = median(n)) %>% ggplot(aes(dag, n-weekdag_gemiddeld)) + geom_line()
data %>% mutate(weekdag = wday(datum, label = T), dag = floor_date(datum, "day")) %>% group_by(weekdag, dag) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = median(n)) %>% ggplot(aes(dag, n-weekdag_gemiddeld)) + geom_line() + geom_smooth()
data %>% mutate(weekdag = wday(datum, label = T), dag = floor_date(datum, "day")) %>% group_by(weekdag, dag) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = median(n)) %>% ggplot(aes(dag, n-weekdag_gemiddeld)) + geom_line() + geom_smooth(method = "gam")
data %>% mutate(weekdag = wday(datum, label = T), dag = floor_date(datum, "day")) %>% group_by(weekdag, dag) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = median(n)) %>% ggplot(aes(dag, n-weekdag_gemiddeld)) + geom_line() + geom_smooth(method = glm)
data %>% mutate(weekdag = wday(datum, label = T), dag = floor_date(datum, "day")) %>% group_by(weekdag, dag) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = median(n)) %>% ggplot(aes(dag, n-weekdag_gemiddeld)) + geom_line() + geom_smooth()
data %>% mutate(weekdag = wday(datum, label = T), dag = floor_date(datum, "day")) %>% group_by(weekdag, dag) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = median(n)) %>% ggplot(aes(dag, n-weekdag_gemiddeld)) + geom_line() + geom_smooth(se = F)
data %>% mutate(weekdag = wday(datum, label = T), dag = floor_date(datum, "day")) %>% group_by(weekdag, dag) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = median(n)) %>% mutate(loes(n-weekdag_gemiddeld~dag))
data %>% mutate(weekdag = wday(datum, label = T), dag = floor_date(datum, "day")) %>% group_by(weekdag, dag) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = median(n)) %>% mutate(loess(n-weekdag_gemiddeld~dag))
data %>% mutate(weekdag = wday(datum, label = T), dag = floor_date(datum, "day")) %>% group_by(weekdag, dag) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = median(n)) %>% loess(n-weekdag_gemiddeld~dag, data = .)
data %>% mutate(weekdag = wday(datum, label = T), dag = floor_date(datum, "day")) %>% group_by(weekdag, dag) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = median(n)) %>% loess(n-(weekdag_gemiddeld)~dag, data = .)
data %>% mutate(weekdag = wday(datum, label = T), dag = floor_date(datum, "day")) %>% group_by(weekdag, dag) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = median(n)) %>% na.omit() %>% loess(n-(weekdag_gemiddeld)~dag, data = .)
data %>% mutate(weekdag = wday(datum, label = T), dag = floor_date(datum, "day")) %>% group_by(weekdag, dag) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = median(n)) %>% na.omit() %>% loess(dag~(n-weekdag_gemiddeld), data = .)
data %>% mutate(weekdag = wday(datum, label = T), dag = floor_date(datum, "day")) %>% group_by(weekdag, dag) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = median(n)) %>% na.omit() %>% loess((n-weekdag_gemiddeld)~dag, data = .)
data %>% mutate(weekdag = wday(datum, label = T), dag = floor_date(datum, "day")) %>% group_by(weekdag, dag) %>% summarize(n = n()) %>% mutate(weekdag_gemiddeld = median(n)) %>% na.omit() %>% loess(formula = (n-weekdag_gemiddeld)~dag, data = .)
